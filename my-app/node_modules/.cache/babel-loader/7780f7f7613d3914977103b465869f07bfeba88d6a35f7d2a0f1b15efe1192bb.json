{"ast":null,"code":"var _jsxFileName = \"/Users/rushiljayant/Desktop/Coding/ReactProjects/GroceryListApp/my-app/src/components/Copy.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport './Copy.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Copy() {\n  _s();\n  const endpoint = 'http://127.0.0.1:8000/copy';\n  const [text, setText] = useState([]);\n  const getData = async () => {\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      setText(data.message.split('\\\\n')); // Assuming the newline character is '\\\\n'\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-display\",\n      children: text.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n      text: text.join('\\n'),\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"copy-button\",\n        children: \"Copy All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Copy, \"9NuUnEmsA4sb8GH1m1U+gqBiFhU=\");\n_c = Copy;\nexport default Copy;\nvar _c;\n$RefreshReg$(_c, \"Copy\");","map":{"version":3,"names":["React","useState","useEffect","CopyToClipboard","jsxDEV","_jsxDEV","Copy","_s","endpoint","text","setText","getData","response","fetch","data","json","message","split","error","console","children","className","map","line","index","fileName","_jsxFileName","lineNumber","columnNumber","join","_c","$RefreshReg$"],"sources":["/Users/rushiljayant/Desktop/Coding/ReactProjects/GroceryListApp/my-app/src/components/Copy.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport './Copy.css';\n\nfunction Copy() {\n    const endpoint = 'http://127.0.0.1:8000/copy';\n    const [text, setText] = useState([]);\n\n    const getData = async () => {\n        try {\n            const response = await fetch(endpoint);\n            const data = await response.json();\n            setText(data.message.split('\\\\n')); // Assuming the newline character is '\\\\n'\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        }\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    return (\n        <div>\n            <div className=\"text-display\">\n                {text.map((line, index) => (\n                    <div key={index}>{line}</div>\n                ))}\n            </div>\n            <CopyToClipboard text={text.join('\\n')}> {/* Joining array into a string for copying */}\n                <button className='copy-button'>Copy All</button>\n            </CopyToClipboard>\n        </div>\n    );\n}\n\nexport default Copy;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,yBAAyB;AACzD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAMC,QAAQ,GAAG,4BAA4B;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,QAAQ,CAAC;MACtC,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,OAAO,CAACI,IAAI,CAACE,OAAO,CAACC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZS,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAKgB,SAAS,EAAC,cAAc;MAAAD,QAAA,EACxBX,IAAI,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClBnB,OAAA;QAAAe,QAAA,EAAkBG;MAAI,GAAZC,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvB,OAAA,CAACF,eAAe;MAACM,IAAI,EAAEA,IAAI,CAACoB,IAAI,CAAC,IAAI,CAAE;MAAAT,QAAA,GAAC,GAAC,eACrCf,OAAA;QAAQgB,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd;AAACrB,EAAA,CA9BQD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAgCb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}