{"ast":null,"code":"var _jsxFileName = \"/Users/rushiljayant/Desktop/Coding/ReactProjects/GroceryListApp/my-app/src/components/List.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Department from \"./Department\";\nimport \"./List.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(props) {\n  _s();\n  // List has departments\n  const endpoint = 'http://127.0.0.1:8000/data';\n  const [departments, setDepartments] = useState(null);\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n\n        // Check if data is an array before setting state\n        if (Array.isArray(data)) {\n          setDepartments(data);\n        } else {\n          console.error(\"Invalid data structure:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: JSON.stringify(departments)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n// Things get updated here\n_s(List, \"4VMnqthavd95B3rMhUG9ODi5xEI=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","useEffect","Department","jsxDEV","_jsxDEV","List","props","_s","endpoint","departments","setDepartments","response","fetch","data","json","Array","isArray","console","error","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rushiljayant/Desktop/Coding/ReactProjects/GroceryListApp/my-app/src/components/List.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Department from \"./Department\";\nimport \"./List.css\";\n\nfunction List(props) {\n  // List has departments\n  const endpoint = 'http://127.0.0.1:8000/data';\n  const [departments, setDepartments] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n\n        // Check if data is an array before setting state\n        if (Array.isArray(data)) {\n          setDepartments(data);\n        } else {\n          console.error(\"Invalid data structure:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    })();\n  }, []);\n\n\n  return (\n    <div>\n      {/* {departments ? departments.map((department) => (\n        <Department key={department.id} name={department['name']} />\n      )) : <p>Loading</p>} */}\n      {/* {departments?.map(department => (\n  <Department key={department['name']} name={department['name']} />\n))} */}\n      {JSON.stringify(departments)}\n    </div>\n  );\n}\n\n// Things get updated here\n\nexport default List;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB;EACA,MAAMC,QAAQ,GAAG,4BAA4B;EAC7C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,CAAC;QACtC,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACvBH,cAAc,CAACG,IAAI,CAAC;QACtB,CAAC,MAAM;UACLI,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEL,IAAI,CAAC;QAChD;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEd,OAAA;IAAAe,QAAA,EAOGC,IAAI,CAACC,SAAS,CAACZ,WAAW;EAAC;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;;AAEA;AAAAlB,EAAA,CArCSF,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAuCb,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}